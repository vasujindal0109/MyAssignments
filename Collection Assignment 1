#application to store 10 unique object

import java.util.HashSet;

class Product {
    private int id;
    private String name;

    public Product(int id, String name) {
        this.id = id;
        this.name = name;
    }
    public int getId() {
        return id;
    }
    public String getName() {
        return name;
    }

    public String toString() {
        return "ID: " + id + ", Name: " + name;
    }
    public int hashCode() {
        return id;
    }
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null || getClass() != obj.getClass()) {
            return false;
        }
        Product other = (Product) obj;
        return id == other.id;
    }
}

public class UniqueProductExample {
    public static void main(String[] args) {
        HashSet<Product> products = new HashSet<>();

        Product product1 = new Product(101, "Keyboard");
        Product product2 = new Product(102, "Mouse");
        Product product3 = new Product(103, "Monitor");
        Product product4 = new Product(104, "Speakers");
        Product product5 = new Product(105, "Headphones");
        Product product6 = new Product(106, "Printer");
        Product product7 = new Product(107, "Scanner");
        Product product8 = new Product(108, "Laptop");
        Product product9 = new Product(109, "Tablet");
        Product product10 = new Product(110, "Smartphone");

        products.add(product1);
        products.add(product2);
        products.add(product3);
        products.add(product4);
        products.add(product5);
        products.add(product6);
        products.add(product7);
        products.add(product8);
        products.add(product9);
        products.add(product10);

        Product duplicateProduct = new Product(102, "Mouses");
        products.add(duplicateProduct);
        for (Product product : products) {
            System.out.println(product);
        }
    }
}
